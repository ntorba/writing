<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="https://ntorba.github.io/writing/feed.xml" rel="self" type="application/atom+xml" /><link href="https://ntorba.github.io/writing/" rel="alternate" type="text/html" /><updated>2020-07-30T07:16:23-05:00</updated><id>https://ntorba.github.io/writing/feed.xml</id><title type="html">Turbo</title><subtitle>Imma write some things here</subtitle><entry><title type="html">Launch a Seldon Deployment</title><link href="https://ntorba.github.io/writing/kubernetes/docker/2020/07/30/first-seldon-deployment.html" rel="alternate" type="text/html" title="Launch a Seldon Deployment" /><published>2020-07-30T00:00:00-05:00</published><updated>2020-07-30T00:00:00-05:00</updated><id>https://ntorba.github.io/writing/kubernetes/docker/2020/07/30/first-seldon-deployment</id><content type="html" xml:base="https://ntorba.github.io/writing/kubernetes/docker/2020/07/30/first-seldon-deployment.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-30-first-seldon-deployment.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Intro&quot;&gt;Intro&lt;a class=&quot;anchor-link&quot; href=&quot;#Intro&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;In this post, we will walkthrough the first steps towards launching your own seldon deployment!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Launch-cluster&quot;&gt;Launch cluster&lt;a class=&quot;anchor-link&quot; href=&quot;#Launch-cluster&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To get started, let's get a cluster up and running. If you followed &lt;a href=&quot;&quot;&gt;part 1&lt;/a&gt; of this series, you can do so with kind. 
Below, I create a cluster, create a namespace called seldon-intro, then use &lt;code&gt;kubens&lt;/code&gt; to make seldon-into my default namespace (so I don't have to include it in every command).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kind create cluster 
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl create namespace seldon-intro
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubens seldon-intro
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h4 id=&quot;Install-seldon-core&quot;&gt;Install seldon-core&lt;a class=&quot;anchor-link&quot; href=&quot;#Install-seldon-core&quot;&gt; &lt;/a&gt;&lt;/h4&gt;&lt;p&gt;To install seldon-core on the cluster, use helm. To install helm itself, find directions &lt;a href=&quot;https://helm.sh/&quot;&gt;here&lt;/a&gt;, or use &lt;code&gt;brew install helm&lt;/code&gt; on mac.&lt;/p&gt;
&lt;p&gt;Once helm is installed, use it to install seldon-core and seldon-core-operator with the following command:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;helm install seldon-core seldon-core-operator &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;googleapis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seldon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;charts&lt;/span&gt; \
    &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usageMetrics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt; \
    &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ambassador&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt; \
    &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seldon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intro&lt;/span&gt; 
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;To check the install is running correctly, run the following command:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl get deployments, pods
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;You should see a pod and deployment with &lt;code&gt;seldon-controller-manager&lt;/code&gt; in the name. This pod and deployment house the seldon-core operator, which is an extensions to to the kubernetes api that allows us to deploy seldon inference graphs later on. We don't need to worry much about these details for now.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Build-example&quot;&gt;Build example&lt;a class=&quot;anchor-link&quot; href=&quot;#Build-example&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;I'm taking this example code directly from &lt;a href=&quot;https://github.com/SeldonIO/seldon-core/blob/master/examples/models/sklearn_iris/sklearn_iris.ipynb&quot;&gt;seldon-core irisClassifier example&lt;/a&gt;. 
This is a classic sklearn example we will be able to get up quick.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;mkdir iris_classifier
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;mkdir: iris_classifier: File exists
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%writefile&lt;/span&gt; iris_classifier/train_iris.py
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;joblib&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.pipeline&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pipeline&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn.linear_model&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LogisticRegression&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sklearn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datasets&lt;/span&gt;


&lt;span class=&quot;n&quot;&gt;OUTPUT_FILE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;iris_classifier/IrisClassifier.sav&amp;quot;&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;clf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;LogisticRegression&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;liblinear&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;multi_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;ovr&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Pipeline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;clf&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;clf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)])&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Training model...&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Model trained!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Saving model in &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;OUTPUT_FILE&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;joblib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OUTPUT_FILE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Model saved!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;vm&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Loading iris data set...&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;datasets&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load_iris&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;iris&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;Dataset loaded!&amp;quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Writing iris_classifier/train_iris.py
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;python iris_classifier/train_iris.py
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Loading iris data set...
Dataset loaded!
Training model...
Model trained!
Saving model in IrisClassifier.sav
Model saved!
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%writefile&lt;/span&gt; iris_classifier/IrisClassifier.py
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;joblib&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IrisClassifier&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;joblib&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;load&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;IrisClassifier.sav&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;predict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;features_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;model&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;predict_proba&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;X&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Writing iris_classifier/IrisClassifier.py
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;I'm going to slightly differ from their example, and use a Dockerfile to create the docker image for this component instead of s2i. Feel free to use s2i directly from their example instead!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%writefile&lt;/span&gt; iris_classifier/requirements.txt
&lt;span class=&quot;n&quot;&gt;sklearn&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;seldon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Writing iris_classifier/requirements.txt
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%%writefile&lt;/span&gt; iris_classifier/Dockerfile
&lt;span class=&quot;n&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;python&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.7&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;slim&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;COPY&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;WORKDIR&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;app&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;RUN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pip&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;requirements&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;txt&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;EXPOSE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5000&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Define environment variable&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ENV&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MODEL_NAME&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;IrisClassifier&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;ENV&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;API_TYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;REST&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;ENV&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SERVICE_TYPE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;MODEL&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;ENV&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PERSISTENCE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# seldon-core-microservice is a command line tool installed with the seldon-core python libray. You can use this locally as well!&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CMD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seldon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;core&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;microservice&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MODEL_NAME&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;API_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SERVICE_TYPE&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;persistence&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PERSISTENCE&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Overwriting iris_classifier/Dockerfile
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;To test this example, let's build and run the docker image!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;docker build iris_classifier/ -t localhost:5000/iris_ex:latest
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Sending build context to Docker daemon  7.168kB
Step 1/10 : FROM python:3.7-slim
 ---&amp;gt; b386e7420fc3
Step 2/10 : COPY . /app
 ---&amp;gt; e89dd689e61c
Step 3/10 : WORKDIR /app
 ---&amp;gt; Running in 293fb2fc0432
Removing intermediate container 293fb2fc0432
 ---&amp;gt; 1815d73b62c4
Step 4/10 : RUN pip install -r requirements.txt
 ---&amp;gt; Running in 611c0926cddc
Collecting sklearn
  Downloading sklearn-0.0.tar.gz (1.1 kB)
Collecting seldon-core
  Downloading seldon_core-1.2.2-py3-none-any.whl (108 kB)
Collecting scikit-learn
  Downloading scikit_learn-0.23.1-cp37-cp37m-manylinux1_x86_64.whl (6.8 MB)
Collecting gunicorn&amp;lt;20.1.0,&amp;gt;=19.9.0
  Downloading gunicorn-20.0.4-py2.py3-none-any.whl (77 kB)
Collecting jaeger-client&amp;lt;4.4.0,&amp;gt;=4.1.0
  Downloading jaeger-client-4.3.0.tar.gz (81 kB)
Requirement already satisfied: setuptools&amp;gt;=41.0.0 in /usr/local/lib/python3.7/site-packages (from seldon-core-&amp;gt;-r requirements.txt (line 2)) (47.3.1)
Collecting numpy&amp;lt;2.0.0
  Downloading numpy-1.19.1-cp37-cp37m-manylinux2010_x86_64.whl (14.5 MB)
Collecting minio&amp;lt;6.0.0,&amp;gt;=4.0.9
  Downloading minio-5.0.10-py2.py3-none-any.whl (75 kB)
Collecting prometheus-client&amp;lt;0.9.0,&amp;gt;=0.7.1
  Downloading prometheus_client-0.8.0-py2.py3-none-any.whl (53 kB)
Collecting requests&amp;lt;3.0.0
  Downloading requests-2.24.0-py2.py3-none-any.whl (61 kB)
Collecting jsonschema&amp;lt;4.0.0
  Downloading jsonschema-3.2.0-py2.py3-none-any.whl (56 kB)
Collecting Flask&amp;lt;2.0.0
  Downloading Flask-1.1.2-py2.py3-none-any.whl (94 kB)
Collecting redis&amp;lt;4.0.0
  Downloading redis-3.5.3-py2.py3-none-any.whl (72 kB)
Collecting Flask-cors&amp;lt;4.0.0
  Downloading Flask_Cors-3.0.8-py2.py3-none-any.whl (14 kB)
Collecting protobuf&amp;lt;4.0.0
  Downloading protobuf-3.12.4-cp37-cp37m-manylinux1_x86_64.whl (1.3 MB)
Collecting opentracing&amp;lt;2.4.0,&amp;gt;=2.2.0
  Downloading opentracing-2.3.0.tar.gz (48 kB)
Collecting Flask-OpenTracing&amp;lt;1.2.0,&amp;gt;=1.1.0
  Downloading Flask-OpenTracing-1.1.0.tar.gz (8.2 kB)
Collecting grpcio&amp;lt;2.0.0
  Downloading grpcio-1.30.0-cp37-cp37m-manylinux2010_x86_64.whl (3.0 MB)
Collecting flatbuffers&amp;lt;2.0.0
  Downloading flatbuffers-1.12-py2.py3-none-any.whl (15 kB)
Collecting PyYAML&amp;lt;5.4
  Downloading PyYAML-5.3.1.tar.gz (269 kB)
Collecting grpcio-opentracing&amp;lt;1.2.0,&amp;gt;=1.1.4
  Downloading grpcio_opentracing-1.1.4-py3-none-any.whl (14 kB)
Collecting scipy&amp;gt;=0.19.1
  Downloading scipy-1.5.2-cp37-cp37m-manylinux1_x86_64.whl (25.9 MB)
Collecting joblib&amp;gt;=0.11
  Downloading joblib-0.16.0-py3-none-any.whl (300 kB)
Collecting threadpoolctl&amp;gt;=2.0.0
  Downloading threadpoolctl-2.1.0-py3-none-any.whl (12 kB)
Collecting threadloop&amp;lt;2,&amp;gt;=1
  Downloading threadloop-1.0.2.tar.gz (4.9 kB)
Collecting thrift
  Downloading thrift-0.13.0.tar.gz (59 kB)
Collecting tornado&amp;gt;=4.3
  Downloading tornado-6.0.4.tar.gz (496 kB)
Collecting certifi
  Downloading certifi-2020.6.20-py2.py3-none-any.whl (156 kB)
Collecting urllib3
  Downloading urllib3-1.25.10-py2.py3-none-any.whl (127 kB)
Collecting pytz
  Downloading pytz-2020.1-py2.py3-none-any.whl (510 kB)
Collecting configparser
  Downloading configparser-5.0.0-py3-none-any.whl (22 kB)
Collecting python-dateutil
  Downloading python_dateutil-2.8.1-py2.py3-none-any.whl (227 kB)
Collecting idna&amp;lt;3,&amp;gt;=2.5
  Downloading idna-2.10-py2.py3-none-any.whl (58 kB)
Collecting chardet&amp;lt;4,&amp;gt;=3.0.2
  Downloading chardet-3.0.4-py2.py3-none-any.whl (133 kB)
Collecting attrs&amp;gt;=17.4.0
  Downloading attrs-19.3.0-py2.py3-none-any.whl (39 kB)
Collecting six&amp;gt;=1.11.0
  Downloading six-1.15.0-py2.py3-none-any.whl (10 kB)
Collecting pyrsistent&amp;gt;=0.14.0
  Downloading pyrsistent-0.16.0.tar.gz (108 kB)
Collecting importlib-metadata; python_version &amp;lt; &amp;#34;3.8&amp;#34;
  Downloading importlib_metadata-1.7.0-py2.py3-none-any.whl (31 kB)
Collecting itsdangerous&amp;gt;=0.24
  Downloading itsdangerous-1.1.0-py2.py3-none-any.whl (16 kB)
Collecting Jinja2&amp;gt;=2.10.1
  Downloading Jinja2-2.11.2-py2.py3-none-any.whl (125 kB)
Collecting click&amp;gt;=5.1
  Downloading click-7.1.2-py2.py3-none-any.whl (82 kB)
Collecting Werkzeug&amp;gt;=0.15
  Downloading Werkzeug-1.0.1-py2.py3-none-any.whl (298 kB)
Collecting zipp&amp;gt;=0.5
  Downloading zipp-3.1.0-py3-none-any.whl (4.9 kB)
Collecting MarkupSafe&amp;gt;=0.23
  Downloading MarkupSafe-1.1.1-cp37-cp37m-manylinux1_x86_64.whl (27 kB)
Building wheels for collected packages: sklearn, jaeger-client, opentracing, Flask-OpenTracing, PyYAML, threadloop, thrift, tornado, pyrsistent
  Building wheel for sklearn (setup.py): started
  Building wheel for sklearn (setup.py): finished with status &amp;#39;done&amp;#39;
  Created wheel for sklearn: filename=sklearn-0.0-py2.py3-none-any.whl size=1315 sha256=c6663f95549bdd109fa052add555e0c4c160b52c7e008d8fea26d816f4db9053
  Stored in directory: /root/.cache/pip/wheels/46/ef/c3/157e41f5ee1372d1be90b09f74f82b10e391eaacca8f22d33e
  Building wheel for jaeger-client (setup.py): started
  Building wheel for jaeger-client (setup.py): finished with status &amp;#39;done&amp;#39;
  Created wheel for jaeger-client: filename=jaeger_client-4.3.0-py3-none-any.whl size=64291 sha256=0f18aca992ee72e11b05c7de433a8b5c5959dbb9240e6c1c7e322ee675959048
  Stored in directory: /root/.cache/pip/wheels/4b/b9/d9/efe18893b02a4bc5abb68e0174d4ab10147f7f184dd170758e
  Building wheel for opentracing (setup.py): started
  Building wheel for opentracing (setup.py): finished with status &amp;#39;done&amp;#39;
  Created wheel for opentracing: filename=opentracing-2.3.0-py3-none-any.whl size=51347 sha256=f04a64db0214646796db1d7e861e1a1d398234fb60d2d807cf518b3a871e893e
  Stored in directory: /root/.cache/pip/wheels/19/c5/4b/b030afc055aa78698cd96eb4b168b7f91bd9254191bf4e9f9f
  Building wheel for Flask-OpenTracing (setup.py): started
  Building wheel for Flask-OpenTracing (setup.py): finished with status &amp;#39;done&amp;#39;
  Created wheel for Flask-OpenTracing: filename=Flask_OpenTracing-1.1.0-py3-none-any.whl size=9070 sha256=8889a367cf5e75a7e4416edead3de69fefe432d42b1d2e19c12eb2212597a34a
  Stored in directory: /root/.cache/pip/wheels/42/22/cd/ccb93fa68f4a01fb6c10082f97bcb2af9eb8e43565ce38a292
  Building wheel for PyYAML (setup.py): started
  Building wheel for PyYAML (setup.py): finished with status &amp;#39;done&amp;#39;
  Created wheel for PyYAML: filename=PyYAML-5.3.1-cp37-cp37m-linux_x86_64.whl size=44619 sha256=8abe3f338d2c78bc974f7c9ae3440f99e6df55ee3b262ee6e663cdb6d8ba714e
  Stored in directory: /root/.cache/pip/wheels/5e/03/1e/e1e954795d6f35dfc7b637fe2277bff021303bd9570ecea653
  Building wheel for threadloop (setup.py): started
  Building wheel for threadloop (setup.py): finished with status &amp;#39;done&amp;#39;
  Created wheel for threadloop: filename=threadloop-1.0.2-py3-none-any.whl size=3423 sha256=18d6bf81e964b05bdda6d3b13e7216b6142041d2a699394a49fead7d6c0bdf4f
  Stored in directory: /root/.cache/pip/wheels/08/93/e3/037c2555d98964d9ca537dabb39827a2b72470a679b5c0de37
  Building wheel for thrift (setup.py): started
  Building wheel for thrift (setup.py): finished with status &amp;#39;done&amp;#39;
  Created wheel for thrift: filename=thrift-0.13.0-py3-none-any.whl size=154885 sha256=502b079d519542e741efa3ca9dd5d3b5ef4f5b92c49756851c508dcb66a8169a
  Stored in directory: /root/.cache/pip/wheels/79/35/5a/19f5dadf91f62bd783aaa8385f700de9bc14772e09ab0f006a
  Building wheel for tornado (setup.py): started
  Building wheel for tornado (setup.py): finished with status &amp;#39;done&amp;#39;
  Created wheel for tornado: filename=tornado-6.0.4-cp37-cp37m-linux_x86_64.whl size=415150 sha256=6fe87d010077fb2bda88f465f8284d05bb7f2e2d431f1ae47162a13026732ba1
  Stored in directory: /root/.cache/pip/wheels/7d/14/fa/d88fb5da77d813ea0ffca38a2ab2a052874e9e1142bad0b348
  Building wheel for pyrsistent (setup.py): started
  Building wheel for pyrsistent (setup.py): finished with status &amp;#39;done&amp;#39;
  Created wheel for pyrsistent: filename=pyrsistent-0.16.0-cp37-cp37m-linux_x86_64.whl size=56582 sha256=0ac45ee5becbce6f6f04ed951c2c44cb82239326c858ad46b9c50da04106c549
  Stored in directory: /root/.cache/pip/wheels/22/52/11/f0920f95c23ed7d2d0b05f2b7b2f4509e87a20cfe8ea43d987
Successfully built sklearn jaeger-client opentracing Flask-OpenTracing PyYAML threadloop thrift tornado pyrsistent
Installing collected packages: numpy, scipy, joblib, threadpoolctl, scikit-learn, sklearn, gunicorn, tornado, threadloop, six, thrift, opentracing, jaeger-client, certifi, urllib3, pytz, configparser, python-dateutil, minio, prometheus-client, idna, chardet, requests, attrs, pyrsistent, zipp, importlib-metadata, jsonschema, itsdangerous, MarkupSafe, Jinja2, click, Werkzeug, Flask, redis, Flask-cors, protobuf, Flask-OpenTracing, grpcio, flatbuffers, PyYAML, grpcio-opentracing, seldon-core
Successfully installed Flask-1.1.2 Flask-OpenTracing-1.1.0 Flask-cors-3.0.8 Jinja2-2.11.2 MarkupSafe-1.1.1 PyYAML-5.3.1 Werkzeug-1.0.1 attrs-19.3.0 certifi-2020.6.20 chardet-3.0.4 click-7.1.2 configparser-5.0.0 flatbuffers-1.12 grpcio-1.30.0 grpcio-opentracing-1.1.4 gunicorn-20.0.4 idna-2.10 importlib-metadata-1.7.0 itsdangerous-1.1.0 jaeger-client-4.3.0 joblib-0.16.0 jsonschema-3.2.0 minio-5.0.10 numpy-1.19.1 opentracing-2.3.0 prometheus-client-0.8.0 protobuf-3.12.4 pyrsistent-0.16.0 python-dateutil-2.8.1 pytz-2020.1 redis-3.5.3 requests-2.24.0 scikit-learn-0.23.1 scipy-1.5.2 seldon-core-1.2.2 six-1.15.0 sklearn-0.0 threadloop-1.0.2 threadpoolctl-2.1.0 thrift-0.13.0 tornado-6.0.4 urllib3-1.25.10 zipp-3.1.0
&lt;span class=&quot;ansi-red-intense-fg&quot;&gt;WARNING: You are using pip version 20.1.1; however, version 20.2 is available.
You should consider upgrading via the &amp;#39;/usr/local/bin/python -m pip install --upgrade pip&amp;#39; command.
&lt;/span&gt;Removing intermediate container 611c0926cddc
 ---&amp;gt; e5c9c25eab23
Step 5/10 : EXPOSE 5000
 ---&amp;gt; Running in b1becc35f355
Removing intermediate container b1becc35f355
 ---&amp;gt; 00cd89defe7e
Step 6/10 : ENV MODEL_NAME IrisClassifer
 ---&amp;gt; Running in 62c1a0b246f6
Removing intermediate container 62c1a0b246f6
 ---&amp;gt; 17eeec5d0d61
Step 7/10 : ENV API_TYPE REST
 ---&amp;gt; Running in c03ff1837bd4
Removing intermediate container c03ff1837bd4
 ---&amp;gt; 6aaecc5b27bb
Step 8/10 : ENV SERVICE_TYPE MODEL
 ---&amp;gt; Running in 810e13bc1727
Removing intermediate container 810e13bc1727
 ---&amp;gt; b28972f57a5e
Step 9/10 : ENV PERSISTENCE 0
 ---&amp;gt; Running in 162743c6449e
Removing intermediate container 162743c6449e
 ---&amp;gt; eb4e7d50cab1
Step 10/10 : CMD exec seldon-core-microservice $MODEL_NAME $API_TYPE --service-type $SERVICE_TYPE --persistence $PERSISTENCE
 ---&amp;gt; Running in 2b747f223cad
Removing intermediate container 2b747f223cad
 ---&amp;gt; 04094c475db6
Successfully built 04094c475db6
Successfully tagged localhost:5000/iris_ex:latest
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;docker push localhost:5000/iris_ex:latest
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;The push refers to repository [localhost:5000/iris_ex]

c29a6535: Preparing 
ba1ff41c: Preparing 
63f2d025: Preparing 
f01300cf: Preparing 
a0be9040: Preparing 
1a837902: Preparing 
c29a6535: Pushed     276MB/269.6MBousingpriceinterface_seldonoutputtransformer_reporter Pushing  231.5MB/269.6MBlatest: digest: sha256:218dbbe53e08de366e7e82147853be659f6f5f1c7c807f66c161fdb86fbd0d1c size: 1791
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;docker run --name &lt;span class=&quot;s2&quot;&gt;&amp;quot;iris_predictor1&amp;quot;&lt;/span&gt; -d --rm -p &lt;span class=&quot;m&quot;&gt;5001&lt;/span&gt;:5000 localhost:5000/iris_ex:latest
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;44e899193312740cd72eab8a23d5dffdafb1f3725682710880dcaca5545b7386
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;curl  -s http://localhost:5001/predict -H &lt;span class=&quot;s2&quot;&gt;&amp;quot;Content-Type: application/json&amp;quot;&lt;/span&gt; -d &lt;span class=&quot;s1&quot;&gt;&amp;#39;{&amp;quot;data&amp;quot;:{&amp;quot;ndarray&amp;quot;:[[5.964,4.006,2.081,1.031]]}}&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;If you see successful output, you have your first seldon-core-microservice up and running!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;docker container ls
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;CONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS                    NAMES
e931762bb6d3        registry:2          &amp;#34;/entrypoint.sh /etc…&amp;#34;   44 hours ago        Up 44 hours         0.0.0.0:5000-&amp;gt;5000/tcp   kind-registry
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Exploring Kubernetes API</title><link href="https://ntorba.github.io/writing/kubernetes/api/2020/07/27/exploring-kubernetes-api.html" rel="alternate" type="text/html" title="Exploring Kubernetes API" /><published>2020-07-27T00:00:00-05:00</published><updated>2020-07-27T00:00:00-05:00</updated><id>https://ntorba.github.io/writing/kubernetes/api/2020/07/27/exploring-kubernetes-api</id><content type="html" xml:base="https://ntorba.github.io/writing/kubernetes/api/2020/07/27/exploring-kubernetes-api.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-27-exploring-kubernetes-api.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Kubernets-API&quot;&gt;Kubernets API&lt;a class=&quot;anchor-link&quot; href=&quot;#Kubernets-API&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The &lt;a href=&quot;https://kubernetes.io/docs/concepts/overview/kubernetes-api/&quot;&gt;Kubernetes api&lt;/a&gt; is how all communication is passed to and within a kubernetes cluster. Any commands sent to kubernetes cluster with &lt;code&gt;kubectl&lt;/code&gt; are hitting endpoints in the kubernetes cluster, which allow the cluster to make the appropriate changes.&lt;/p&gt;
&lt;p&gt;Luckly for us, kubernetes makes it easy to explore the api through the use of &lt;code&gt;kubectl proxy&lt;/code&gt;. In this post we will look through the different paths of the api to see how different functionalites are exposed&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kind create cluster --name explore
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Creating cluster &amp;#34;explore&amp;#34; ...
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Ensuring node image (kindest/node:v1.17.0) 🖼
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Preparing nodes 📦 7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Writing configuration 📜7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Starting control-plane 🕹️7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Installing CNI 🔌7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Installing StorageClass 💾7l
Set kubectl context to &amp;#34;kind-explore&amp;#34;
You can now use your cluster with:

kubectl cluster-info --context kind-explore

Have a question, bug, or feature request? Let us know! https://kind.sigs.k8s.io/#community 🙂
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectx kind-explore
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Switched to context &amp;#34;kind-explore&amp;#34;.
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl get pods
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;No resources found in default namespace.
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;With a new cluster up and running, go to a terminal, and end the command
&lt;code&gt;kubectl proxy --port=8000&lt;/code&gt; (if port 8000 is taken, use a different number). 
You will want to run this command in a terminal because the server itself will need be running while we continue to execute commands from this notebook or your webrowser.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://kubernetes.io/docs/tasks/extend-kubernetes/http-proxy-access-api/&quot;&gt;Kubectl proxy&lt;/a&gt; is a built-in kubernetes command that exposes the kubernetes api to the user. With a kubectl proxy server running locally, we can visit the different api paths to see information about what api endpoints are available.&lt;/p&gt;
&lt;p&gt;To start exploring the kubernetes api, either go to &lt;code&gt;http://127.0.0.1:8000/apis&lt;/code&gt; in your browser, or use a curl in this notebook:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;curl http://127.0.0.1:8000/apis
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;{
  &amp;#34;kind&amp;#34;: &amp;#34;APIGroupList&amp;#34;,
  &amp;#34;apiVersion&amp;#34;: &amp;#34;v1&amp;#34;,
  &amp;#34;groups&amp;#34;: [
    {
      &amp;#34;name&amp;#34;: &amp;#34;apiregistration.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;apiregistration.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;apiregistration.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;apiregistration.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;extensions&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;extensions/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;extensions/v1beta1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;apps&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;apps/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;apps/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;events.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;events.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;events.k8s.io/v1beta1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;authentication.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;authentication.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;authentication.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;authentication.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;authorization.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;authorization.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;authorization.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;authorization.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;autoscaling&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;autoscaling/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;autoscaling/v2beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v2beta1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;autoscaling/v2beta2&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v2beta2&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;autoscaling/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;batch&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;batch/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;batch/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;batch/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;certificates.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;certificates.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;certificates.k8s.io/v1beta1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;networking.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;networking.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;networking.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;networking.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;policy&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;policy/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;policy/v1beta1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;rbac.authorization.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;rbac.authorization.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;rbac.authorization.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;rbac.authorization.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;storage.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;storage.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;storage.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;storage.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;admissionregistration.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;admissionregistration.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;admissionregistration.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;admissionregistration.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;apiextensions.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;apiextensions.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;apiextensions.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;apiextensions.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;scheduling.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;scheduling.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;scheduling.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;scheduling.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;coordination.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;coordination.k8s.io/v1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
        },
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;coordination.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;coordination.k8s.io/v1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;node.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;node.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;node.k8s.io/v1beta1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
      }
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;discovery.k8s.io&amp;#34;,
      &amp;#34;versions&amp;#34;: [
        {
          &amp;#34;groupVersion&amp;#34;: &amp;#34;discovery.k8s.io/v1beta1&amp;#34;,
          &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
        }
      ],
      &amp;#34;preferredVersion&amp;#34;: {
        &amp;#34;groupVersion&amp;#34;: &amp;#34;discovery.k8s.io/v1beta1&amp;#34;,
        &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;
      }
    }
  ]
}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;You'll see a big json reponse of kind &lt;code&gt;APIGroupList&lt;/code&gt;. This response shows a list of kubernets APIGroups, which are a mechanism kubernetes uses to make it easier for users to extend the kubernetes api (We will see how the seldon custom resource definition extends this api by the end of this post!)&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl create namespace tester
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;namespace/tester created
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubens tester
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Context &amp;#34;kind-explore&amp;#34; modified.
Active namespace is &amp;#34;tester&amp;#34;.
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;curl http://127.0.0.1:8000/api/v1
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;{
  &amp;#34;kind&amp;#34;: &amp;#34;APIResourceList&amp;#34;,
  &amp;#34;groupVersion&amp;#34;: &amp;#34;v1&amp;#34;,
  &amp;#34;resources&amp;#34;: [
    {
      &amp;#34;name&amp;#34;: &amp;#34;bindings&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Binding&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;componentstatuses&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: false,
      &amp;#34;kind&amp;#34;: &amp;#34;ComponentStatus&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;cs&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;configmaps&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;ConfigMap&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;cm&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;qFsyl6wFWjQ=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;endpoints&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Endpoints&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;ep&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;fWeeMqaN/OA=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;events&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Event&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;ev&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;r2yiGXH7wu8=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;limitranges&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;LimitRange&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;limits&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;EBKMFVe6cwo=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;namespaces&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: false,
      &amp;#34;kind&amp;#34;: &amp;#34;Namespace&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;ns&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;Q3oi5N2YM8M=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;namespaces/finalize&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: false,
      &amp;#34;kind&amp;#34;: &amp;#34;Namespace&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;namespaces/status&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: false,
      &amp;#34;kind&amp;#34;: &amp;#34;Namespace&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;nodes&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: false,
      &amp;#34;kind&amp;#34;: &amp;#34;Node&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;no&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;XwShjMxG9Fs=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;nodes/proxy&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: false,
      &amp;#34;kind&amp;#34;: &amp;#34;NodeProxyOptions&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;nodes/status&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: false,
      &amp;#34;kind&amp;#34;: &amp;#34;Node&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;persistentvolumeclaims&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;PersistentVolumeClaim&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;pvc&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;QWTyNDq0dC4=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;persistentvolumeclaims/status&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;PersistentVolumeClaim&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;persistentvolumes&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: false,
      &amp;#34;kind&amp;#34;: &amp;#34;PersistentVolume&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;pv&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;HN/zwEC+JgM=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;persistentvolumes/status&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: false,
      &amp;#34;kind&amp;#34;: &amp;#34;PersistentVolume&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;pods&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Pod&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;po&amp;#34;
      ],
      &amp;#34;categories&amp;#34;: [
        &amp;#34;all&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;xPOwRZ+Yhw8=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;pods/attach&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;PodAttachOptions&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;get&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;pods/binding&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Binding&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;pods/eviction&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;group&amp;#34;: &amp;#34;policy&amp;#34;,
      &amp;#34;version&amp;#34;: &amp;#34;v1beta1&amp;#34;,
      &amp;#34;kind&amp;#34;: &amp;#34;Eviction&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;pods/exec&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;PodExecOptions&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;get&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;pods/log&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Pod&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;pods/portforward&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;PodPortForwardOptions&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;get&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;pods/proxy&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;PodProxyOptions&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;pods/status&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Pod&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;podtemplates&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;PodTemplate&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;LIXB2x4IFpk=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;replicationcontrollers&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;ReplicationController&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;rc&amp;#34;
      ],
      &amp;#34;categories&amp;#34;: [
        &amp;#34;all&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;Jond2If31h0=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;replicationcontrollers/scale&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;group&amp;#34;: &amp;#34;autoscaling&amp;#34;,
      &amp;#34;version&amp;#34;: &amp;#34;v1&amp;#34;,
      &amp;#34;kind&amp;#34;: &amp;#34;Scale&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;replicationcontrollers/status&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;ReplicationController&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;resourcequotas&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;ResourceQuota&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;quota&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;8uhSgffRX6w=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;resourcequotas/status&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;ResourceQuota&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;secrets&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Secret&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;S6u1pOWzb84=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;serviceaccounts&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;ServiceAccount&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;deletecollection&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;sa&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;pbx9ZvyFpBE=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;services&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Service&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;list&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;,
        &amp;#34;watch&amp;#34;
      ],
      &amp;#34;shortNames&amp;#34;: [
        &amp;#34;svc&amp;#34;
      ],
      &amp;#34;categories&amp;#34;: [
        &amp;#34;all&amp;#34;
      ],
      &amp;#34;storageVersionHash&amp;#34;: &amp;#34;0/CO1lhkEBI=&amp;#34;
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;services/proxy&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;ServiceProxyOptions&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;create&amp;#34;,
        &amp;#34;delete&amp;#34;,
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    },
    {
      &amp;#34;name&amp;#34;: &amp;#34;services/status&amp;#34;,
      &amp;#34;singularName&amp;#34;: &amp;#34;&amp;#34;,
      &amp;#34;namespaced&amp;#34;: true,
      &amp;#34;kind&amp;#34;: &amp;#34;Service&amp;#34;,
      &amp;#34;verbs&amp;#34;: [
        &amp;#34;get&amp;#34;,
        &amp;#34;patch&amp;#34;,
        &amp;#34;update&amp;#34;
      ]
    }
  ]
}&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Depth over Breadth</title><link href="https://ntorba.github.io/writing/markdown/learning/learning%20strategies/growth/2020/07/24/depth-over-breadth.html" rel="alternate" type="text/html" title="Depth over Breadth" /><published>2020-07-24T00:00:00-05:00</published><updated>2020-07-24T00:00:00-05:00</updated><id>https://ntorba.github.io/writing/markdown/learning/learning%20strategies/growth/2020/07/24/depth-over-breadth</id><content type="html" xml:base="https://ntorba.github.io/writing/markdown/learning/learning%20strategies/growth/2020/07/24/depth-over-breadth.html">&lt;p&gt;This is an idea I first explicitly learned about while listening to &lt;a href=&quot;https://www.amazon.com/gp/product/0140230386/ref=as_li_qf_sp_asin_il_tl?imprToken=8S8HjpFN5qUYGel0nDft0A&amp;amp;slotNum=1&amp;amp;ie=UTF8&amp;amp;camp=1789&amp;amp;creative=9325&amp;amp;creativeASIN=0140230386&amp;amp;linkCode=w61&amp;amp;tag=farnamstreet-20&quot;&gt;The Art of Learning&lt;/a&gt; by Josh Waitzkin. 
The main idea is that you can gain a much better understanding of the bigger picture (any object or field of study) by digging deep on a seemingly small part. For example, as a software engineer, depth over breadth would be dedicating your time to a single programming language instead of trying to learn 3 at once. A deep understanding of a single language improves your general programming ability more than a shallow understanding of many. Not to mention, learning new languages after a deep understanding of one opens the door to many important, nuanced connections.&lt;/p&gt;

&lt;p&gt;Digging into the small part is what Josh calls the micro. “Depth over breadth” is understanding the macro (programming in general) from the micro (a single programming language).&lt;/p&gt;

&lt;p&gt;A great example Josh uses in the book is from &lt;a href=&quot;https://www.amazon.com/Zen-Art-Motorcycle-Maintenance-Inquiry/dp/0060839872/ref=sr_1_2?crid=5B53JPNMK4KC&amp;amp;dchild=1&amp;amp;keywords=the+art+of+motorcycle+maintenance&amp;amp;qid=1595588821&amp;amp;s=books&amp;amp;sprefix=The+art+of+motor%2Cstripbooks%2C142&amp;amp;sr=1-2&quot;&gt;The Art of Motorcycle Maintenance&lt;/a&gt;. The main character, Phadreus, is a professor at a college in Bozeman, Montana. He teaches literature and writing. At one point, he has a notably hard working student completely stumped with writer’s block. The assignment is to write 500 words about Bozeman, a small town in rural Montana. Despite her determination, she just couldn’t get any words on the page. After many attempts to help, Phradreus frustratedly tells her “Narrow it down to the front of one building on the main street of Bozeman. The Opera House. Start with the upper left-hand brick.” The next day, the girl turned in a 5000 word essay. This point of view gave her endless inspiration. Focusing on something so small (the micro) gave her an entirely new view of the whole town (the macro).&lt;/p&gt;

&lt;p&gt;This idea takes our original software analogy even further. Forget focusing on an entire language. Focus on a single library. Tear it apart. Use the debugger and step through all levels of the code. Look at how the authors abstracted their ideas. Analyze the data structures. Look for the use of language specific features. Contribute to it.&lt;/p&gt;

&lt;p&gt;Deep understanding of a single library does much more than just help you understand that library. As you use others, you begin to see important connections, or striking differences. Those connections help you pick up new libraries much faster. You also begin to build a much deeper understanding of the language itself.&lt;/p&gt;

&lt;p&gt;With a strategy like this, you build a deeper understanding of the macro (a programming language, or even programming itself) by narrowing in on the micro (a specific library of a single language).&lt;/p&gt;</content><author><name></name></author><summary type="html">This is an idea I first explicitly learned about while listening to The Art of Learning by Josh Waitzkin. The main idea is that you can gain a much better understanding of the bigger picture (any object or field of study) by digging deep on a seemingly small part. For example, as a software engineer, depth over breadth would be dedicating your time to a single programming language instead of trying to learn 3 at once. A deep understanding of a single language improves your general programming ability more than a shallow understanding of many. Not to mention, learning new languages after a deep understanding of one opens the door to many important, nuanced connections.</summary></entry><entry><title type="html">Custom Resources and Operators</title><link href="https://ntorba.github.io/writing/kubernetes/docker/2020/07/20/dive-into-operators-and-custom-resources.html" rel="alternate" type="text/html" title="Custom Resources and Operators" /><published>2020-07-20T00:00:00-05:00</published><updated>2020-07-20T00:00:00-05:00</updated><id>https://ntorba.github.io/writing/kubernetes/docker/2020/07/20/dive-into-operators-and-custom-resources</id><content type="html" xml:base="https://ntorba.github.io/writing/kubernetes/docker/2020/07/20/dive-into-operators-and-custom-resources.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-20-dive-into-operators-and-custom-resources.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Intro&quot;&gt;Intro&lt;a class=&quot;anchor-link&quot; href=&quot;#Intro&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;In this post we will walk through the basics behind the seldon custom resource definition. 
At a high level, kubernetes only job is to maintain the desired state of the cluster. All interactions are changes to the desired state. The magic of kubernetes is that once you tell it the new state, it creates and maintains that state for you. 
The seldon-core projects serves inferences graphs on kubernetes with a custom resource and operator. These provide automation of complex systems, while allowing us to easily configure the desired state of our deployments without doing a lot of manual work.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Launch-Cluster&quot;&gt;Launch Cluster&lt;a class=&quot;anchor-link&quot; href=&quot;#Launch-Cluster&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;To get started, let's get a cluster up and running. If you followed &lt;a href=&quot;&quot;&gt;part 1&lt;/a&gt; of this series, you can do so with kind. 
Below, I create a cluster, create a namespace called seldon-intro, then use &lt;code&gt;kubens&lt;/code&gt; to make seldon-into my default namespace (so I don't have to include it in every command).&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kind create cluster 
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl create namespace seldon-intro
&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubens seldon-intro
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Creating cluster &amp;#34;kind&amp;#34; ...
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Ensuring node image (kindest/node:v1.17.0) 🖼7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Preparing nodes 📦 7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Writing configuration 📜7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Starting control-plane 🕹️7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Installing CNI 🔌7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Installing StorageClass 💾7l
Set kubectl context to &amp;#34;kind-kind&amp;#34;
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Have a question, bug, or feature request? Let us know! https://kind.sigs.k8s.io/#community 🙂
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;KubeAPI,-Custom-Resources,-and-Operators&quot;&gt;KubeAPI, Custom Resources, and Operators&lt;a class=&quot;anchor-link&quot; href=&quot;#KubeAPI,-Custom-Resources,-and-Operators&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;The KubeAPI is the medium through which all communication is handled in a kubernetes cluster. It is a rest server. When you send commands to a kubernetes cluster, you are hitting a specific api endpoint with commands for the server to execute. 
Kubernetes comes with some built-in objects you should be familiar with. Deployments, services, pods, etc. These objects are useful in and of themselves, but we often need to use many of them at once, which can get cumbersome. 
For those familiar with seldon, you know that you can create very complex inference graphs with many components. Instead of deploying and connecting all seldon services manually, we are able to build a single json/yaml configuration that deploys the entire graph. This is possible because of operators and custom resources. 
Operators and custom resources have an intimate relationship, and must be used in tandem. Earlier, I introduce the KubeAPI. We know that is how all internal and external communication is handled in the cluster. With operators, we extend the KubeAPI. In other words, operators allow us to add more endpoints to the KubeApi to carry out custom commands in our cluster. Which is where custom resources come in. They define the custom instructions for our new endpoint to execute. 
Let's see an operator and custom resource in action.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Install-Seldon-core&quot;&gt;Install Seldon-core&lt;a class=&quot;anchor-link&quot; href=&quot;#Install-Seldon-core&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;I suggest using &lt;code&gt;helm&lt;/code&gt; to install seldon-core. If you haven't used helm before, use &lt;a href=&quot;https://helm.sh/&quot;&gt;this page&lt;/a&gt; to find install instructions. (If you're on a mac, just use &lt;code&gt;brew install helm&lt;/code&gt;). For those familiar with python, helm is like the pip for kubernetes. It works by using &lt;a href=&quot;https://helm.sh/docs/topics/charts/&quot;&gt;helm charts&lt;/a&gt;. A chart is a group of files that describe a higher level application using built-in kubernetes resources. For example, you could use a helm chart to deploy a full stack web application. We are going to use helm to install seldon-core and seldon-core-operator. These helm charts are what will allow us to deploy seldon inference graphs. You can learn more about helm charts &lt;a href=&quot;https://helm.sh/docs/topics/charts/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once helm is installed, use it to install seldon-core and seldon-core-operator with the following command:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;helm install seldon-core seldon-core-operator &lt;span class=&quot;err&quot;&gt;\&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;repo&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;https&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;storage&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;googleapis&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;seldon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;charts&lt;/span&gt; \
    &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usageMetrics&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt; \
    &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ambassador&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;true&lt;/span&gt; \
    &lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;seldon&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intro&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#unnecessary after using `kubens seldon-intro`, but keeping here to make sure the install is explicit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;NAME: seldon-core
LAST DEPLOYED: Mon Jul 27 08:32:08 2020
NAMESPACE: seldon-intro
STATUS: deployed
REVISION: 1
TEST SUITE: None
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;After a successful install of seldon-core and seldon-core-operator, run the following command:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl get deployments
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;NAME                        READY   UP-TO-DATE   AVAILABLE   AGE
seldon-controller-manager   1/1     1            1           6s
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We see we now have a deployment, &lt;code&gt;seldon-controller-manager&lt;/code&gt;, running in our seldon-intro namespace.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!!&lt;/span&gt;kubectl describe svc seldon-webhook-service
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;



&lt;div class=&quot;output_text output_subarea output_execute_result&quot;&gt;
&lt;pre&gt;[&amp;#39;Name:              seldon-webhook-service&amp;#39;,
 &amp;#39;Namespace:         seldon-intro&amp;#39;,
 &amp;#39;Labels:            app=seldon&amp;#39;,
 &amp;#39;                   app.kubernetes.io/instance=seldon-core&amp;#39;,
 &amp;#39;                   app.kubernetes.io/managed-by=Helm&amp;#39;,
 &amp;#39;                   app.kubernetes.io/name=seldon-core-operator&amp;#39;,
 &amp;#39;                   app.kubernetes.io/version=1.2.1&amp;#39;,
 &amp;#39;Annotations:       meta.helm.sh/release-name: seldon-core&amp;#39;,
 &amp;#39;                   meta.helm.sh/release-namespace: seldon-intro&amp;#39;,
 &amp;#39;Selector:          app.kubernetes.io/instance=seldon1,app.kubernetes.io/name=seldon,app.kubernetes.io/version=v0.5,app=seldon,control-plane=seldon-controller-manager&amp;#39;,
 &amp;#39;Type:              ClusterIP&amp;#39;,
 &amp;#39;IP:                10.96.113.42&amp;#39;,
 &amp;#39;Port:              &amp;lt;unset&amp;gt;  443/TCP&amp;#39;,
 &amp;#39;TargetPort:        443/TCP&amp;#39;,
 &amp;#39;Endpoints:         10.244.0.5:443&amp;#39;,
 &amp;#39;Session Affinity:  None&amp;#39;,
 &amp;#39;Events:            &amp;lt;none&amp;gt;&amp;#39;]&lt;/pre&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;The docker image name used to create the seldon-controller-manager pod and deployment is called &lt;code&gt;docker.io/seldonio/seldon-core-operator:1.2.1&lt;/code&gt;. That is because the seldon-controller-manager is the seldon-core-operator.&lt;/p&gt;
&lt;p&gt;Be sure to match the last line with the namespace you created in the previous command. We will talk more about what the other lines mean later in the series. 
After installing, run&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl get pods -o wide
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;and you'll see you have a pod running with seldon-controller-manager in the name (followed by a random string, we will talk about why that is soon). Next, run&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl get deployments
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Seldon-controller-manager is a kubernetes operator. As described &lt;a href=&quot;https://www.jaegertracing.io/docs/1.16/operator/&quot;&gt;here&lt;/a&gt;, kubernetes operators are extensions of the kubernetes api that allow users to easily package and deploy complex applications on kubernetes. The seldon-core-operator adds a lot of functionality to the kubernetes cluster and allows us to interact with seldon deployments as if they were a built-in kubernetes object. Along with this, we also installed the seldon-core custom resource definition. Kubernetes custom resources are extensions of the native kuberetes api. As you will see soon, we will now be able to deploy and interact with a new structure, the &lt;code&gt;sdep&lt;/code&gt;, in the same fashion we deploy and monitor kubernetes deployments, servives, and other built-in resources.&lt;/p&gt;
&lt;p&gt;All interactions with a kubernetes cluster is the user specifying a new desired state, and the kubernetes cluster using it's resources to change into that desired state. When, a custom resource is created, an operator is needed as well to tell kubernetes how to handle updates to the desired state of the custom resource. 
The seldon-core operator is what allows users to make edits to currently running seldon deployments without downtime.&lt;/p&gt;
&lt;p&gt;Operators allows kubernetes to run stateful applications. A popular usecase for operators is databases.&lt;/p&gt;
&lt;p&gt;To get a better idea at how helm charts add to your kubernetes cluster, check out the &lt;a href=&quot;&quot;&gt;Exploring the Kubernetes API&lt;/a&gt; post digs into the basic internals of how your cluster actually receives commands.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://enterprisersproject.com/article/2019/2/kubernetes-operators-plain-english?page=1&quot;&gt;this post&lt;/a&gt;, they write&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;If you had to sum up Kubernetes in a word, the best choice might not be “orchestration” but “automation.” That’s what it’s all about:Kubernetes enables the automation of the infrastructure (and corresponding operational burden of managing that infrastructure) necessary for running containerized applications – a must when running these apps at scale in production environments.
This is very evident with the Seldon deployment CRD and operator. As we move along and start to create our own seldon deployments, you will see the power of this automation. With a single file, a seldon deployment will launch multiple services, deployments, pods, and allow for continuous updates of all those components through the Kubernetes api. Seldon has leveraged the power of the automation offered by kubernetes to create inferences graphs of many components.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Another great quote from that article:&lt;/p&gt;
&lt;blockquote&gt;&lt;p&gt;“Operators are simplifying the process highly complex distributed database management by defining the installation, scale, updates, and management lifecycle of a stateful clustered application,” says Yossi Jana, DevOps team leader at AllCloud. From another vantage point, consider life without Operators. “Without Operators, many applications need intervention to deploy, scale, reconfigure, upgrade, or recover from faults,” Thompson says. “If your app – or apps that you depend on, such as your database management system – [requires] DevOps engineers hovering over a keyboard in these critical moments, hoping they get the steps correctly, you’re almost certain to have greater downtime and more stress in your team.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;From &lt;a href=&quot;https://opensource.com/article/20/3/kubernetes-operator-sdk&quot;&gt;kubernetes-operator-sdk tutorial&lt;/a&gt;, operators are used to define custom resources. They extend the kubernetes api to tell the cluster how to handle those resources. 
Operators themselves run in pods. This is why you see the seldon-controller-manager deployment and pod running after we install seldon-core with helm.&lt;/p&gt;
&lt;p&gt;As described in the kubernetes docs &lt;a href=&quot;https://kubernetes.io/docs/concepts/extend-kubernetes/operator/&quot;&gt;here&lt;/a&gt;, operators follow the controller pattern, which means they are responsible for keep the desired state of the custom resource they are responsible for. 
The seldon-core-operator is responsbile for the Seldon Deployment custom resource. That means, when we create or edit a seldon deployment, the seldon-core-operator is responsible for adjusting the kubernetes deployment to the desired state to meet the new edits applied by the user.&lt;/p&gt;
&lt;p&gt;In every article you read about kubernetes operators, you'll find some sentiment to the fact that is confusing the first time around. In fact, pretty much everything you learn about kubernetes will be confusing the first time around. Don't let that discourage you. That is why we are using seldon to help our understanding. Instead of reading description after description of what a custom resource and operator are, let's actually use them to begin to understand the power they provide.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;Let's launch our first seldon deployment onto the cluster to see what the consequences of creating a seldon deployment custom resource are.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;%%bash
kubectl apply -f - &lt;span class=&quot;s&quot;&gt;&amp;lt;&amp;lt; END&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;apiVersion: machinelearning.seldon.io/v1alpha2&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;kind: SeldonDeployment&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;metadata:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  name: iris-model&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;spec:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  name: sklearn-iris-deployment&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  predictors:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;  - componentSpecs:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    - spec:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        containers:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        - image: seldonio/sklearn-iris:0.1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;          imagePullPolicy: IfNotPresent&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;          name: sklearn-iris-classifier&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    graph:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      children: []&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      endpoint:&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;        type: REST&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      name: sklearn-iris-classifier&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;      type: MODEL&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    name: predictor&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;    replicas: 1&lt;/span&gt;
&lt;span class=&quot;s&quot;&gt;END&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl get pods
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ntorba.github.io/writing/images/chart-preview.png" /><media:content medium="image" url="https://ntorba.github.io/writing/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Cluster Interaction Basics</title><link href="https://ntorba.github.io/writing/kubernetes/docker/2020/07/18/cluster-interaction-basics.html" rel="alternate" type="text/html" title="Cluster Interaction Basics" /><published>2020-07-18T00:00:00-05:00</published><updated>2020-07-18T00:00:00-05:00</updated><id>https://ntorba.github.io/writing/kubernetes/docker/2020/07/18/cluster-interaction-basics</id><content type="html" xml:base="https://ntorba.github.io/writing/kubernetes/docker/2020/07/18/cluster-interaction-basics.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-18-cluster-interaction-basics.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;Intro&quot;&gt;Intro&lt;a class=&quot;anchor-link&quot; href=&quot;#Intro&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;This post walks through some kubernetes basics and launches your first deployment and service on your cluster.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ntorba.github.io/writing/images/chart-preview.png" /><media:content medium="image" url="https://ntorba.github.io/writing/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Learning Kubernetes Through Seldon</title><link href="https://ntorba.github.io/writing/markdown/seldon/kubernetes/python/2020/07/17/learning-kubernetes-through-seldon.html" rel="alternate" type="text/html" title="Learning Kubernetes Through Seldon" /><published>2020-07-17T00:00:00-05:00</published><updated>2020-07-17T00:00:00-05:00</updated><id>https://ntorba.github.io/writing/markdown/seldon/kubernetes/python/2020/07/17/learning-kubernetes-through-seldon</id><content type="html" xml:base="https://ntorba.github.io/writing/markdown/seldon/kubernetes/python/2020/07/17/learning-kubernetes-through-seldon.html">&lt;h1 id=&quot;intro&quot;&gt;Intro&lt;/h1&gt;
&lt;p&gt;I recently started working with with the &lt;a href=&quot;https://docs.seldon.io/projects/seldon-core/en/v1.1.0/&quot;&gt;seldon-core&lt;/a&gt; project. I am working on a team now that is developing an ML platform to allower researchers to quickly serve and monitor ML models at scale. Seldon-core is a fantastic tool to build on top of for this project. Seldon-core deploys models at scale by leveraging kubernetes. The only problem was, I had never used kubernetes before.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;a href=&quot;https://ntorba.github.io/writing/jupyter/2020/07/17/local-kubernetes.html&quot;&gt;Launch a local kubernetes cluster&lt;/a&gt;. Follow this guide to get a local kubernetes cluster up and running so you can experiment locally. Skip this section if you already have access to a kubernetes cluster.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;First Seldon Deployment&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Seldon Deployments: Custom Resources on Kubernetes&lt;/a&gt;. Create your first seldon deployment and read about what makes the seldon deployment custom resource so useful.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Debugging Seldon Deployments&lt;/a&gt;. Take a look at where to find your logs and diagnosis some common issues.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Seldon-core analytics and load testing with Locust&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;Advanced Seldon Deployments&lt;/a&gt;. Explore deploying to multiple pods and defining Horizontal Pod Autoscaling.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;&quot;&gt;CD with Argocd&lt;/a&gt;. Explore how to use argocd to continuously deploy.&lt;/li&gt;
&lt;/ol&gt;

&lt;h1 id=&quot;why-seldon-core&quot;&gt;Why Seldon-core?&lt;/h1&gt;
&lt;p&gt;Seldon-core is an open source projects built by the London based startup &lt;a href=&quot;https://www.seldon.io/&quot;&gt;Seldon&lt;/a&gt;. With seldon-core, you can use python (and java) to easily deploy ML models built in any framework at scale. However, they offer tools for more than just model serving. With seldon-core, you construct an inference graph. The inference graph is built with &lt;a href=&quot;https://docs.seldon.io/projects/seldon-core/en/v1.1.0/python/python_component.html&quot;&gt;these components&lt;/a&gt;: 
    * Model
    * Transformer
    * Combiner 
    * Router
These additional components add the ability to create much more than just a single model. You can set up custom A/B tests, or 1-armed bandit systems with the router, combine results from two different models with the combiner, and have independent components (which allows separate scale settings) to transform the input data. Seldon-core inference graphs are powerful!&lt;/p&gt;

&lt;h1 id=&quot;whats-this-series&quot;&gt;What’s this series?&lt;/h1&gt;
&lt;p&gt;In order to take advantage of seldon-core, you need to become familiar with some basic kubernetes fundamentals, so that’s what I did. First, I followed the &lt;a href=&quot;https://kubernetes.io/docs/tutorials/kubernetes-basics/create-cluster/cluster-interactive/&quot;&gt;kubernetes interactive tutorial&lt;/a&gt; to get a handle. Then, I dove right into seldon deployments. Working with seldon-core and building implementations of projects is a great way to get the kubernetes basics down. At the start, I couldn’t tell you the difference between a kubernetes deployment and a service. Although I’m not an expert now, I’m comfortable with seldon deployments, all the components they run on top of, and how to quickly debug my implementations by checking through the logs of containers scattered throughout the different components of my seldon deployments. 
In this post, I link to, in order, posts I’ve written detailing the concepts and tools I learned to become confident in building and deploying at scale with seldon-core.&lt;/p&gt;</content><author><name></name></author><summary type="html">Intro I recently started working with with the seldon-core project. I am working on a team now that is developing an ML platform to allower researchers to quickly serve and monitor ML models at scale. Seldon-core is a fantastic tool to build on top of for this project. Seldon-core deploys models at scale by leveraging kubernetes. The only problem was, I had never used kubernetes before.</summary></entry><entry><title type="html">Local Kubernetes on KIND</title><link href="https://ntorba.github.io/writing/kubernetes/docker/2020/07/17/local-kubernetes.html" rel="alternate" type="text/html" title="Local Kubernetes on KIND" /><published>2020-07-17T00:00:00-05:00</published><updated>2020-07-17T00:00:00-05:00</updated><id>https://ntorba.github.io/writing/kubernetes/docker/2020/07/17/local-kubernetes</id><content type="html" xml:base="https://ntorba.github.io/writing/kubernetes/docker/2020/07/17/local-kubernetes.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-07-17-local-kubernetes.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Intro&quot;&gt;Intro&lt;a class=&quot;anchor-link&quot; href=&quot;#Intro&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;This is part one of a series learning about kubernetes through seldon-core. In this post, I will introduce, &lt;a href=&quot;&quot;&gt;Kind&lt;/a&gt;, an awesome tool to run a kubernetes cluster on your local computer and some basic commands to interact with the cluster (I highly suggest downloading &lt;a href=&quot;&quot;&gt;kubectx&lt;/a&gt; and &lt;a href=&quot;&quot;&gt;kubens&lt;/a&gt;!) If you are brand new to kubernetes, I highly reccomend you first go follow the &lt;a href=&quot;https://kubernetes.io/docs/tutorials/kubernetes-basics/create-cluster/cluster-interactive/&quot;&gt;kubernetes interactive tutorial&lt;/a&gt; to get a handle on basic interactions. Then, come back here to have some fun on your own cluster.
If you already have access to a kubernetes cluster and want to lean about seldon-core, check out &lt;a href=&quot;&quot;&gt;part 2&lt;/a&gt;!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Install-kubectl&quot;&gt;Install kubectl&lt;a class=&quot;anchor-link&quot; href=&quot;#Install-kubectl&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If this is the first time you've used kubernetes, you will need to install kubectl, the command line tool for interacting with kubernetes. This can be downloaded &lt;a href=&quot;https://kubernetes.io/docs/tasks/tools/install-kubectl/&quot;&gt;here&lt;/a&gt;. On mac you can use &lt;code&gt;brew install kubectl&lt;/code&gt;. 
Check your install by running:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl version --client --short
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Client Version: v1.18.5
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;If you see similar output, you are good to go!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Install-Kind&quot;&gt;Install Kind&lt;a class=&quot;anchor-link&quot; href=&quot;#Install-Kind&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;If you're on mac, it's as simple as &lt;code&gt;brew install kind&lt;/code&gt;. If not, check out &lt;a href=&quot;https://kind.sigs.k8s.io/docs/user/quick-start/&quot;&gt;this page&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Create-your-First-Cluster&quot;&gt;Create your First Cluster&lt;a class=&quot;anchor-link&quot; href=&quot;#Create-your-First-Cluster&quot;&gt; &lt;/a&gt;&lt;/h3&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kind create cluster 
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;Creating cluster &amp;#34;kind&amp;#34; ...
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Ensuring node image (kindest/node:v1.17.0) 🖼
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Preparing nodes 📦 7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Writing configuration 📜7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Starting control-plane 🕹️7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Installing CNI 🔌7l
 &lt;span class=&quot;ansi-green-fg&quot;&gt;✓&lt;/span&gt; Installing StorageClass 💾7l
Set kubectl context to &amp;#34;kind-kind&amp;#34;
You can now use your cluster with:

kubectl cluster-info --context kind-kind

Thanks for using kind! 😊
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;It's as simple as that. If it is your first time running kind, it will automatically download the appropiate docker image (something like kindest/node:1.17.0), which may take a few minutes. 
After that command is finished, check if your cluster is running:&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;kubectl cluster-info
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div class=&quot;output_wrapper&quot;&gt;
&lt;div class=&quot;output&quot;&gt;

&lt;div class=&quot;output_area&quot;&gt;

&lt;div class=&quot;output_subarea output_stream output_stdout output_text&quot;&gt;
&lt;pre&gt;&lt;span class=&quot;ansi-green-fg&quot;&gt;Kubernetes master&lt;/span&gt; is running at &lt;span class=&quot;ansi-yellow-fg&quot;&gt;https://127.0.0.1:32771&lt;/span&gt;
&lt;span class=&quot;ansi-green-fg&quot;&gt;KubeDNS&lt;/span&gt; is running at &lt;span class=&quot;ansi-yellow-fg&quot;&gt;https://127.0.0.1:32771/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy&lt;/span&gt;

To further debug and diagnose cluster problems, use &amp;#39;kubectl cluster-info dump&amp;#39;.
&lt;/pre&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;If you see output like above, displaying info about your Kubernetes master and KubeDNS, then you have successfully launched a local kubernetes cluster!&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h3 id=&quot;Bonus:-Install-kubectx-and-kubens&quot;&gt;Bonus: Install kubectx and kubens&lt;a class=&quot;anchor-link&quot; href=&quot;#Bonus:-Install-kubectx-and-kubens&quot;&gt; &lt;/a&gt;&lt;/h3&gt;&lt;p&gt;As you follow through the next posts, I will be using the &lt;code&gt;kubectx&lt;/code&gt; and &lt;code&gt;kubens&lt;/code&gt; command line tools. If you are on mac, you can install them with brew: &lt;code&gt;brew install kubectx&lt;/code&gt;. This will download and install both &lt;code&gt;kubectx&lt;/code&gt; and &lt;code&gt;kubens&lt;/code&gt;. If you're not on mac, find install instructions &lt;a href=&quot;https://github.com/ahmetb/kubectx#installation&quot;&gt;here&lt;/a&gt;. 
These allow you to easily switch between kubernetes contexts and namespaces. You can perform all the same actions with &lt;code&gt;kubectl&lt;/code&gt;, but kubectx and kubens make some common commands much quicker.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ntorba.github.io/writing/images/chart-preview.png" /><media:content medium="image" url="https://ntorba.github.io/writing/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Good At Math Bad At Writing</title><link href="https://ntorba.github.io/writing/2020/05/07/Good-at-Math-Bad-At-Writing.html" rel="alternate" type="text/html" title="Good At Math Bad At Writing" /><published>2020-05-07T00:00:00-05:00</published><updated>2020-05-07T00:00:00-05:00</updated><id>https://ntorba.github.io/writing/2020/05/07/Good-at-Math-Bad-At-Writing</id><content type="html" xml:base="https://ntorba.github.io/writing/2020/05/07/Good-at-Math-Bad-At-Writing.html">&lt;p&gt;Good at Math, Bad at Writing&lt;/p&gt;

&lt;p&gt;The biggest failure of my education was the acceptance of the “good at math, bad at writing” label. It comes as no surprise that I ended up working as a software engineer, but it took until now to see how much time I wasted hating writing, when in fact, the underlying principles are strikingly similar.&lt;/p&gt;

&lt;p&gt;Looking at the end product, the similarities are hard to see. Books and programs are much different, but the process to generate them is quite similar. For both, the ultimate goal is to give the user/reader (“user” for software and “reader” for writing - they serve the same purpose) a particular experience by providing information in a well thought out structure. This goal is achieved using a set of tools and conventions. Software leverages programming languages with different designs (object oriented vs functional, for example) and frameworks (web application vs data application). Writing leverages spoken language with accepted structures such as short-stories, books, long-form, and poems. In both, deciding the general structure and design (picking a programming language vs picking a writing structure) is integral to creating the end experience you wish to generate.&lt;/p&gt;

&lt;p&gt;Software engineers specialize in particular niches similar to authors specializing in particular structures. I build data applications with python to improve the experience of data scientists while poets use poems to create an experience for their readers. In the end, the best software engineers and writers are those who most effectively organize and present necessary information to their audience.&lt;/p&gt;

&lt;p&gt;It is sometimes easy to miss when this is done well, but never hard to miss when done poorly. Everyone knows the absolute frustration of using software that is particularly difficult to understand or flat out doesn’t do what its supposed to. While bad writing leaves you lost, or worse, leaves you in apparent understanding, only later finding you completely missed the point the author wanted to get across (something I’ve had happen in my writing many a time). Both of these are results of bad information organization. At some point the creators mis executed along their path to creating the experience they planned on.&lt;/p&gt;

&lt;p&gt;Most disciplines share the same underlying principles. These hidden connections is what makes me so sad about the all too common “Good at math, bad at writing” label given to so many students at such a young age. It is harmful to plant this idea in a young mind, blocking them from the hidden connections they then don’t bother to look for. I’ve come to realize how important and enjoyable writing is in my everyday life. Not only do you need to write more than ever to communicate with work colleagues via slack and email, but nothing can help boost memory more than writing well thought out notes about new topics and ideas.&lt;/p&gt;

&lt;p&gt;I’m angry at any teacher who allowed this idea to propagate or ever did a shitty job teaching an English class. English teachers have such a great opportunity to showcase how important writing is to every aspect of life and they squandered it.&lt;/p&gt;

&lt;p&gt;This realization has been very important to me. I will forever despise the “good at math, bad at writing” because of the limitations it tricks people into thinking they have.&lt;/p&gt;</content><author><name></name></author><summary type="html">Good at Math, Bad at Writing</summary></entry><entry><title type="html">Exploring Metaflow</title><link href="https://ntorba.github.io/writing/jupyter/2020/03/08/metaflow-exploration.html" rel="alternate" type="text/html" title="Exploring Metaflow" /><published>2020-03-08T00:00:00-06:00</published><updated>2020-03-08T00:00:00-06:00</updated><id>https://ntorba.github.io/writing/jupyter/2020/03/08/metaflow-exploration</id><content type="html" xml:base="https://ntorba.github.io/writing/jupyter/2020/03/08/metaflow-exploration.html">&lt;!--
#################################################
### THIS FILE WAS AUTOGENERATED! DO NOT EDIT! ###
#################################################
# file to edit: _notebooks/2020-03-08-metaflow-exploration.ipynb
--&gt;

&lt;div class=&quot;container&quot; id=&quot;notebook-container&quot;&gt;
        
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;About&quot;&gt;About&lt;a class=&quot;anchor-link&quot; href=&quot;#About&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/Netflix/metaflow&quot;&gt;metaflow&lt;/a&gt; is a python package open sourced by netflix to help data scientists easily scale their project workflows. Metaflow is mainly interacted with through decorators. In this post, we will get behind the scenes of how these decorators actually work.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;h2 id=&quot;The-code&quot;&gt;The code&lt;a class=&quot;anchor-link&quot; href=&quot;#The-code&quot;&gt; &lt;/a&gt;&lt;/h2&gt;&lt;p&gt;To start, let's take a look at the &lt;a href=&quot;https://github.com/Netflix/metaflow/blob/master/metaflow/tutorials/00-helloworld/helloworld.py&quot;&gt;first example&lt;/a&gt; in the documentation. This is a simple flow.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
    
    
&lt;div class=&quot;cell border-box-sizing code_cell rendered&quot;&gt;
&lt;div class=&quot;input&quot;&gt;

&lt;div class=&quot;inner_cell&quot;&gt;
    &lt;div class=&quot;input_area&quot;&gt;
&lt;div class=&quot; highlight hl-ipython3&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;metaflow&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FlowSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;step&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LinearFlow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FlowSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@step&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_var&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;hello world&amp;#39;&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@step&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;the data artifact is: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@step&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;the data artifact is still: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%s&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;my_var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;LinearFlow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

    &lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;
    

&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;We see that the LinearFlow python class inherits from metaflow's FlowSpec class, and each of the functions are decorated with &lt;code&gt;@step&lt;/code&gt;. As seen (here)[&lt;a href=&quot;https://docs.metaflow.org/metaflow/basics&quot;&gt;https://docs.metaflow.org/metaflow/basics&lt;/a&gt;], this basic flow follows metaflow's guidelines. However, what is actually happening? How does it turn our functions into pipeline steps? Let's start by taking a look at the Flowspec class.&lt;/p&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&quot;cell border-box-sizing text_cell rendered&quot;&gt;&lt;div class=&quot;inner_cell&quot;&gt;
&lt;div class=&quot;text_cell_render border-box-sizing rendered_html&quot;&gt;
&lt;p&gt;(Flowspec)[&lt;a href=&quot;https://github.com/Netflix/metaflow/blob/master/metaflow/flowspec.py&quot;&gt;https://github.com/Netflix/metaflow/blob/master/metaflow/flowspec.py&lt;/a&gt;] definition and constructor. Full code can be found at the link.&lt;/p&gt;
&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FlowSpec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Main class from which all Flows should inherit.&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    Attributes&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    ----------&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    script_name&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    index&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    input&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;    &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

    &lt;span class=&quot;c1&quot;&gt;# Attributes that are not saved in the datastore when checkpointing.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# Name starting with &amp;#39;__&amp;#39;, methods, functions and Parameters do not need&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# to be listed.&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;_EPHEMERAL&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;_EPHEMERAL&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;s1&quot;&gt;&amp;#39;_datastore&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;s1&quot;&gt;&amp;#39;_cached_input&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;s1&quot;&gt;&amp;#39;_graph&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;s1&quot;&gt;&amp;#39;_flow_decorators&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;s1&quot;&gt;&amp;#39;_steps&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;s1&quot;&gt;&amp;#39;index&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                  &lt;span class=&quot;s1&quot;&gt;&amp;#39;input&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;_flow_decorators&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;fm&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use_cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;sd&quot;&gt;&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        Construct a FlowSpec&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        Parameters&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        ----------&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        use_cli : bool, optional, default: True&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;            Set to True if the flow is invoked from __main__ or the command line&lt;/span&gt;
&lt;span class=&quot;sd&quot;&gt;        &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__class__&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__name__&lt;/span&gt;

        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_datastore&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_transition&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;None&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_cached_input&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_graph&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FlowGraph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;vm&quot;&gt;__class__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_steps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;getattr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;node&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;_graph&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;use_cli&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# we import cli here to make sure custom parameters in&lt;/span&gt;
            &lt;span class=&quot;c1&quot;&gt;# args.py get fully evaluated before cli.py is imported.&lt;/span&gt;
            &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;cli&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://ntorba.github.io/writing/images/chart-preview.png" /><media:content medium="image" url="https://ntorba.github.io/writing/images/chart-preview.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">Figuring Out The Brain</title><link href="https://ntorba.github.io/writing/markdown/philosophy/first%20draft/2020/03/07/figuring-out-the-brain.html" rel="alternate" type="text/html" title="Figuring Out The Brain" /><published>2020-03-07T00:00:00-06:00</published><updated>2020-03-07T00:00:00-06:00</updated><id>https://ntorba.github.io/writing/markdown/philosophy/first%20draft/2020/03/07/figuring-out-the-brain</id><content type="html" xml:base="https://ntorba.github.io/writing/markdown/philosophy/first%20draft/2020/03/07/figuring-out-the-brain.html">&lt;h1 id=&quot;intro&quot;&gt;Intro&lt;/h1&gt;
&lt;p&gt;Mathew Cobb recently wrote &lt;a href=&quot;https://www.theguardian.com/science/2020/feb/27/why-your-brain-is-not-a-computer-neuroscience-neural-networks-consciousness&quot;&gt;Why your brain is not a computer&lt;/a&gt; on The Guardian. Thank you to &lt;a href=&quot;https://www.datascienceweekly.org/&quot;&gt;Data Science Weekly&lt;/a&gt; and &lt;a href=&quot;https://dataelixir.com/&quot;&gt;Data Exlixir&lt;/a&gt; newsletters for sending both sending this to me.&lt;/p&gt;

&lt;h1 id=&quot;summary&quot;&gt;Summary&lt;/h1&gt;
&lt;p&gt;In this article, Cobb details some of history of the “brain as a computer metaphor.” With the rise of AI, this topic has become very relevant. There are many smart people in many different camps, and its hard to figure out who has the best information when there is so much out there.&lt;/p&gt;

&lt;h1 id=&quot;my-thoughts&quot;&gt;My Thoughts&lt;/h1&gt;
&lt;p&gt;While reading this, an idea from a software engineering article I recently read struck me: “It is easier to write code than to read it.” The consequences of this fact are littered throughout code bases and can help us understand our struggle to understand the brain.&lt;/p&gt;

&lt;p&gt;Reading code is a form of reverse engineering. Working in the reverse direction is often much more difficult than building from the ground up. This is counter-intuitive until you experience it. Very commonly in software, problems that seem quicky and easy end up thorny and difficult. So, a motivated engineer sees a big jumble of old code for an “easy” problem and decides this other person must have been an idiot, so they decide to take their own stab at it, only to find that their new solution is a new fangled mess as well.&lt;/p&gt;

&lt;p&gt;This situaiton is prominent in other work as well. Many tasks are forms of reverse engineering - reading even! It is easier to write and understand your own thoughts than to read and understand someone else’s. So, if we humans find reverse engineering so difficult for these everyday tasks, its not wonder its been such a nightmare trying to reverse engineer the brain (I guess it’s a shame evolution isn’t a better author). It is no wonder our main metaphor for the brain is computers. We built computers and use them everyday. They are the closest analogue we have, although they are quite different.&lt;/p&gt;

&lt;p&gt;This line of thought puts me firmly in the “better metaphor for understanding” category. The only chance humans have to understand the brain is to continue to try to build our own version then compare the outcome.&lt;/p&gt;

&lt;p&gt;If we were given a modern computer 100 years ago, would it have advanced the rate of technology? I suppose not. It would have been so advanced that the people of the times wouldn’t have known where to start reverse engineering such a complex technology. So it is with the brain. It has somehow put itself far ahead of our time, out of reach of reverse engineering, a skill we so desperately wish we were proficient at for this task.&lt;/p&gt;</content><author><name></name></author><summary type="html">Intro Mathew Cobb recently wrote Why your brain is not a computer on The Guardian. Thank you to Data Science Weekly and Data Exlixir newsletters for sending both sending this to me.</summary></entry></feed>